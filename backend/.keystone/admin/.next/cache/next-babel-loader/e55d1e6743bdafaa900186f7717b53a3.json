{"ast":null,"code":"import React from 'react';\nimport { KeystoneProvider } from '@keystone-next/admin-ui/context';\nimport { ErrorBoundary } from '@keystone-next/admin-ui/components';\nimport { Core } from '@keystone-ui/core';\nimport * as view1b1b4fbf from '../../../node_modules/@keystone-next/fields/types/mongoId/views';\nimport * as view9433729b from '../../../node_modules/@keystone-next/fields/types/text/views';\nimport * as viewf8d84945 from '../../../node_modules/@keystone-next/fields/types/password/views';\nimport * as view82fb5eff from '../../../node_modules/@keystone-next/fields/types/relationship/views';\nimport * as view68459eed from '../../../node_modules/@keystone-next/fields/types/timestamp/views';\nimport * as view8d284c4d from '../../../node_modules/@keystone-next/fields/types/select/views';\nimport * as view63dda7fb from '../../../node_modules/@keystone-next/fields/types/integer/views';\nconst adminConfig = {};\nconst fieldViews = {\n  view1b1b4fbf,\n  view9433729b,\n  viewf8d84945,\n  view82fb5eff,\n  view68459eed,\n  view8d284c4d,\n  view63dda7fb\n};\nconst lazyMetadataQuery = {\n  kind: 'Document',\n  definitions: [{\n    kind: 'OperationDefinition',\n    operation: 'query',\n    selectionSet: {\n      kind: 'SelectionSet',\n      selections: [{\n        kind: 'Field',\n        name: {\n          kind: 'Name',\n          value: 'keystone',\n          loc: {\n            start: 22,\n            end: 30\n          }\n        },\n        arguments: [],\n        directives: [],\n        selectionSet: {\n          kind: 'SelectionSet',\n          selections: [{\n            kind: 'Field',\n            name: {\n              kind: 'Name',\n              value: 'adminMeta',\n              loc: {\n                start: 39,\n                end: 48\n              }\n            },\n            arguments: [],\n            directives: [],\n            selectionSet: {\n              kind: 'SelectionSet',\n              selections: [{\n                kind: 'Field',\n                name: {\n                  kind: 'Name',\n                  value: 'lists',\n                  loc: {\n                    start: 59,\n                    end: 64\n                  }\n                },\n                arguments: [],\n                directives: [],\n                selectionSet: {\n                  kind: 'SelectionSet',\n                  selections: [{\n                    kind: 'Field',\n                    name: {\n                      kind: 'Name',\n                      value: 'key',\n                      loc: {\n                        start: 77,\n                        end: 80\n                      }\n                    },\n                    arguments: [],\n                    directives: [],\n                    loc: {\n                      start: 77,\n                      end: 80\n                    }\n                  }, {\n                    kind: 'Field',\n                    name: {\n                      kind: 'Name',\n                      value: 'isHidden',\n                      loc: {\n                        start: 91,\n                        end: 99\n                      }\n                    },\n                    arguments: [],\n                    directives: [],\n                    loc: {\n                      start: 91,\n                      end: 99\n                    }\n                  }, {\n                    kind: 'Field',\n                    name: {\n                      kind: 'Name',\n                      value: 'fields',\n                      loc: {\n                        start: 110,\n                        end: 116\n                      }\n                    },\n                    arguments: [],\n                    directives: [],\n                    selectionSet: {\n                      kind: 'SelectionSet',\n                      selections: [{\n                        kind: 'Field',\n                        name: {\n                          kind: 'Name',\n                          value: 'path',\n                          loc: {\n                            start: 131,\n                            end: 135\n                          }\n                        },\n                        arguments: [],\n                        directives: [],\n                        loc: {\n                          start: 131,\n                          end: 135\n                        }\n                      }, {\n                        kind: 'Field',\n                        name: {\n                          kind: 'Name',\n                          value: 'createView',\n                          loc: {\n                            start: 148,\n                            end: 158\n                          }\n                        },\n                        arguments: [],\n                        directives: [],\n                        selectionSet: {\n                          kind: 'SelectionSet',\n                          selections: [{\n                            kind: 'Field',\n                            name: {\n                              kind: 'Name',\n                              value: 'fieldMode',\n                              loc: {\n                                start: 175,\n                                end: 184\n                              }\n                            },\n                            arguments: [],\n                            directives: [],\n                            loc: {\n                              start: 175,\n                              end: 184\n                            }\n                          }],\n                          loc: {\n                            start: 159,\n                            end: 198\n                          }\n                        },\n                        loc: {\n                          start: 148,\n                          end: 198\n                        }\n                      }],\n                      loc: {\n                        start: 117,\n                        end: 210\n                      }\n                    },\n                    loc: {\n                      start: 110,\n                      end: 210\n                    }\n                  }],\n                  loc: {\n                    start: 65,\n                    end: 220\n                  }\n                },\n                loc: {\n                  start: 59,\n                  end: 220\n                }\n              }],\n              loc: {\n                start: 49,\n                end: 228\n              }\n            },\n            loc: {\n              start: 39,\n              end: 228\n            }\n          }],\n          loc: {\n            start: 31,\n            end: 234\n          }\n        },\n        loc: {\n          start: 22,\n          end: 234\n        }\n      }, {\n        kind: 'Field',\n        name: {\n          kind: 'Name',\n          value: 'authenticatedItem'\n        },\n        selectionSet: {\n          kind: 'SelectionSet',\n          selections: [{\n            kind: 'InlineFragment',\n            typeCondition: {\n              kind: 'NamedType',\n              name: {\n                kind: 'Name',\n                value: 'User'\n              }\n            },\n            selectionSet: {\n              kind: 'SelectionSet',\n              selections: [{\n                kind: 'Field',\n                name: {\n                  kind: 'Name',\n                  value: 'id'\n                }\n              }, {\n                kind: 'Field',\n                name: {\n                  kind: 'Name',\n                  value: 'name'\n                }\n              }]\n            }\n          }]\n        }\n      }]\n    }\n  }]\n};\nexport default function App({\n  Component,\n  pageProps\n}) {\n  return /*#__PURE__*/React.createElement(Core, null, /*#__PURE__*/React.createElement(KeystoneProvider, {\n    adminConfig: adminConfig,\n    adminMetaHash: \"yhh7em\",\n    fieldViews: fieldViews,\n    lazyMetadataQuery: lazyMetadataQuery\n  }, /*#__PURE__*/React.createElement(ErrorBoundary, null, /*#__PURE__*/React.createElement(Component, pageProps))));\n}","map":null,"metadata":{},"sourceType":"module"}